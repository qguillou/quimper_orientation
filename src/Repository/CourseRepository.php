<?php

namespace Repository;

use Entity\User;
use Entity\Course;

/**
 * CourseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CourseRepository extends \Doctrine\ORM\EntityRepository
{
  public function findFutureCourse(){
    return $this->createQueryBuilder('c')
        ->where('c.date >= :date')
        ->setParameter('date', new \Datetime(date('d-m-Y')))
        ->orderBy('c.date', 'ASC')
        ->getQuery()
        ->getResult();
  }

  public function findCourseWhereUserIsRegistered(User $user)
  {
    return $this->createQueryBuilder('c')
        ->select('c')
        ->from('Entity\Inscrit', 'i')
        ->where('c.date >= :date')
        ->andWhere('i.course = c.id')
        ->andWhere('i.licence = :licence')
        ->setParameters(array('date' => new \Datetime(date('d-m-Y')), 'licence' => $user->getLicense()))
        ->orderBy('c.date', 'ASC')
        ->getQuery()
        ->getResult();
  }

  public function findPrev(Course $course)
  {
      return $this->createQueryBuilder('c')
          ->where('c.date < :date')
          ->andWhere('c.date > :today')
          ->andWhere('c.id != :id')
          ->setParameters(array('date' => $course->getDate(), 'today' => date('Y-m-d'), 'id' => $course->getId()))
          ->orderBy('c.date', 'DESC')
          ->setMaxResults(1)
          ->getQuery()
          ->getOneOrNullResult();
  }

  public function findNext(Course $course)
  {
      return $this->createQueryBuilder('c')
          ->where('c.date > :date')
          ->andWhere('c.id != :id')
          ->setParameters(array('date' => $course->getDate(), 'id' => $course->getId()))
          ->orderBy('c.date', 'ASC')
          ->setMaxResults(1)
          ->getQuery()
          ->getOneOrNullResult();
  }
}
